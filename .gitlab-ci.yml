# first, install Cypress, then run all tests (in parallel)
stages:
  - app-build
  - build
  - test

# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  DOCKER_TLS_CERTDIR: ""


# cache using branch name
# https://gitlab.com/help/ci/caching/index.md
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

## application deployment for e2e test
app-deploy:
  image: docker:18.09
  stage: app-build
  tags:
    - raas-e2e
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:18.09-dind

  script:
    - docker build -f frontend/Dockerfile -t uditgaurav/cyprus:v1 .
    - docker run -d --restart=always -p 3000:80 uditgaurav/cyprus:v1
    - docker ps
    
# this job installs NPM dependencies and Cypress
install:
  image: cypress/base:10
  stage: build
  tags:
    - raas-e2e  
  script:
    - npm ci
    # check Cypress binary path and cached versions
    # useful to make sure we are not carrying around old versions
    - npx cypress cache path
    - npx cypress cache list

cypress-e2e:
  image: cypress/base:10
  stage: test
  tags:
    - raas-e2e   
  script:
    - $(npm bin)/cypress run
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - cypress/screenshots
    - cypress/videos
    reports:
      junit:
        - results/TEST-*.xml
